name: Build documentation

on:
  push:
    branches: ["master"]
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

env:
  INSTANCE_EN: 'Writerside/docs'
  INSTANCE_RU: 'Writerside/docs-ru'
  DOCKER_VERSION: '243.22562'

jobs:
  build_en:
    runs-on: ubuntu-latest
    outputs:
      artifact: ${{ steps.define-ids.outputs.artifact }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Define instance id and artifacts
        id: define-ids
        run: |
          INSTANCE=${INSTANCE_EN#*/}
          INSTANCE_ID_UPPER=$(echo "$INSTANCE_EN" | tr '[:lower:]' '[:upper:]')
          ARTIFACT="webHelpDOCS2-all.zip"

          # Print the values
          echo "INSTANCE_ID_UPPER: $INSTANCE_ID_UPPER"
          echo "ARTIFACT: $ARTIFACT"

          # Set the environment variables and outputs
          echo "INSTANCE_ID_UPPER=$INSTANCE_ID_UPPER" >> $GITHUB_ENV
          echo "ARTIFACT=$ARTIFACT" >> $GITHUB_ENV
          echo "artifact=$ARTIFACT" >> $GITHUB_OUTPUT

      - name: Build docs using Writerside Docker builder
        uses: JetBrains/writerside-github-action@v4
        with:
          instance: ${{ env.INSTANCE_EN }}
          docker-version: ${{ env.DOCKER_VERSION }}

      - name: Save artifact with build results
        uses: actions/upload-artifact@v4
        with:
          name: docs_en
          path: |
            artifacts/${{ steps.define-ids.outputs.artifact }}
            artifacts/report.json
          retention-days: 1

  build_ru:
    runs-on: ubuntu-latest
    outputs:
      artifact: ${{ steps.define-ids.outputs.artifact }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Define instance id and artifacts
        id: define-ids
        run: |
          INSTANCE=${INSTANCE_RU#*/}
          INSTANCE_ID_UPPER=$(echo "$INSTANCE_RU" | tr '[:lower:]' '[:upper:]')
          ARTIFACT="webHelpDOCS-RU2-all.zip"

          # Print the values
          echo "INSTANCE_ID_UPPER: $INSTANCE_ID_UPPER"
          echo "ARTIFACT: $ARTIFACT"

          # Set the environment variables and outputs
          echo "INSTANCE_ID_UPPER=$INSTANCE_ID_UPPER" >> $GITHUB_ENV
          echo "ARTIFACT=$ARTIFACT" >> $GITHUB_ENV
          echo "artifact=$ARTIFACT" >> $GITHUB_OUTPUT

      - name: Build docs using Writerside Docker builder
        uses: JetBrains/writerside-github-action@v4
        with:
          instance: ${{ env.INSTANCE_RU }}
          docker-version: ${{ env.DOCKER_VERSION }}

      - name: Save artifact with build results
        uses: actions/upload-artifact@v4
        with:
          name: docs_ru
          path: |
            artifacts/${{ steps.define-ids.outputs.artifact }}
            artifacts/report.json
          retention-days: 1





  test_en:
    needs: build_en
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: docs_en
          path: artifacts

      - name: Test documentation
        uses: JetBrains/writerside-checker-action@v1
        with:
          instance: ${{ env.INSTANCE_EN }}

  test_ru:
    needs: build_ru
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: docs_ru
          path: artifacts

      - name: Test documentation
        uses: JetBrains/writerside-checker-action@v1
        with:
          instance: ${{ env.INSTANCE_RU }}



  deploy:
    needs: [build_en, build_ru, test_en, test_ru]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: gh-pages

      - name: Remove old docs
        run: rm -rf docs

      - name: Download en artifacts
        uses: actions/download-artifact@v4
        with:
          name: docs_en
          path: artifacts

      - name: Debug
        run: |
          echo "${{ needs.build_en.outputs.artifact }}"
          echo "${{ needs.build_ru.outputs.artifact }}"
          cd artifacts
          ls

      - name: Unzip en artifact
        run: unzip -O UTF-8 -qq "artifacts/${{ needs.build_en.outputs.artifact }}" -d docs/en

      - name: Download ru artifacts
        uses: actions/download-artifact@v4
        with:
          name: docs_ru
          path: artifacts

      - name: Unzip ru artifact
        run: unzip -O UTF-8 -qq "artifacts/${{ needs.build_ru.outputs.artifact }}" -d docs/ru

      - name: Remove artifacts
        run: rm -rf artifacts

      - name: Commit to gh-pages
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: Automated Docs Change
          branch: gh-pages
