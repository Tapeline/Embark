import tkinter
from typing import Any, Callable

from .core_rendering import CTkCanvas as CTkCanvas
from .core_rendering import DrawEngine as DrawEngine
from .core_widget_classes import CTkBaseClass as CTkBaseClass
from .core_widget_classes import DropdownMenu as DropdownMenu
from .font import CTkFont as CTkFont
from .theme import ThemeManager as ThemeManager

class CTkOptionMenu(CTkBaseClass):
    def __init__(self, master: Any, width: int = 140, height: int = 28, corner_radius: int | None = None, bg_color: str | tuple[str, str] = "transparent", fg_color: str | tuple[str, str] | None = None, button_color: str | tuple[str, str] | None = None, button_hover_color: str | tuple[str, str] | None = None, text_color: str | tuple[str, str] | None = None, text_color_disabled: str | tuple[str, str] | None = None, dropdown_fg_color: str | tuple[str, str] | None = None, dropdown_hover_color: str | tuple[str, str] | None = None, dropdown_text_color: str | tuple[str, str] | None = None, font: tuple | CTkFont | None = None, dropdown_font: tuple | CTkFont | None = None, values: list | None = None, variable: tkinter.Variable | None = None, state: str = ..., hover: bool = True, command: Callable[[str], Any] | None = None, dynamic_resizing: bool = True, anchor: str = "w", **kwargs) -> None: ...
    def destroy(self) -> None: ...
    def configure(self, require_redraw: bool = False, **kwargs) -> None: ...
    def cget(self, attribute_name: str) -> any: ...
    def set(self, value: str): ...
    def get(self) -> str: ...
    def bind(self, sequence: str = None, command: Callable = None, add: str | bool = True): ...
    def unbind(self, sequence: str = None, funcid: str = None): ...
    def focus(self): ...
    def focus_set(self): ...
    def focus_force(self): ...
