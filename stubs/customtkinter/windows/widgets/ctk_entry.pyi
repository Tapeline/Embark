import tkinter
from typing import Any

from _typeshed import Incomplete

from .core_rendering import CTkCanvas as CTkCanvas
from .core_rendering import DrawEngine as DrawEngine
from .core_widget_classes import CTkBaseClass as CTkBaseClass
from .font import CTkFont as CTkFont
from .theme import ThemeManager as ThemeManager
from .utility import check_kwargs_empty as check_kwargs_empty
from .utility import pop_from_dict_by_set as pop_from_dict_by_set

class CTkEntry(CTkBaseClass):
    def __init__(self, master: Any, width: int = 140, height: int = 28, corner_radius: int | None = None, border_width: int | None = None, bg_color: str | tuple[str, str] = "transparent", fg_color: str | tuple[str, str] | None = None, border_color: str | tuple[str, str] | None = None, text_color: str | tuple[str, str] | None = None, placeholder_text_color: str | tuple[str, str] | None = None, textvariable: tkinter.Variable | None = None, placeholder_text: str | None = None, font: tuple | CTkFont | None = None, state: str = ..., **kwargs) -> None: ...
    def destroy(self) -> None: ...
    def configure(self, require_redraw: bool = False, **kwargs) -> None: ...
    def cget(self, attribute_name: str) -> any: ...
    def bind(self, sequence: Incomplete | None = None, command: Incomplete | None = None, add: bool = True) -> None: ...
    def unbind(self, sequence: Incomplete | None = None, funcid: Incomplete | None = None) -> None: ...
    def delete(self, first_index, last_index: Incomplete | None = None) -> None: ...
    def insert(self, index, string): ...
    def get(self): ...
    def focus(self) -> None: ...
    def focus_set(self) -> None: ...
    def focus_force(self) -> None: ...
    def index(self, index): ...
    def icursor(self, index): ...
    def select_adjust(self, index): ...
    def select_from(self, index): ...
    def select_clear(self): ...
    def select_present(self): ...
    def select_range(self, start_index, end_index): ...
    def select_to(self, index): ...
    def xview(self, index): ...
    def xview_moveto(self, f): ...
    def xview_scroll(self, number, what): ...
